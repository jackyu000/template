/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as AuthRegisterIndexImport } from './routes/auth/register/index'
import { Route as AuthResetIndexImport } from './routes/auth/reset/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const AuthRegisterIndexLazyImport = createFileRoute('/auth/register/')()
const AuthResetIndexLazyImport = createFileRoute('/auth/reset/')()
const AuthLoginIndexLazyImport = createFileRoute('/auth/login/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index').then((d) => d.Route))

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard/index').then((d) => d.Route))

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  path: '/auth/register/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register/index').then((d) => d.Route))

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login/index').then((d) => d.Route))

const AuthResetIndexRoute = AuthResetIndexImport.update({
  path: '/auth/reset/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/reset/index').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset/': {
      id: '/auth/reset/'
      path: '/auth/reset'
      fullPath: '/auth/reset'
      preLoaderRoute: typeof AuthResetIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthLoginIndexRoute,
  AuthRegisterIndexRoute,
  AuthResetIndexRoute,
  DashboardIndexRoute,
})

/* prettier-ignore-end */
